var groupU1 = {
	"type" : "Union",
	"plannedCourses" : [ {
		"code" : "MATH",
		"number" : "1001",
		"title" : "MATH-1001",
		"credits" : 3.0
	}, {
		"code" : "MATH",
		"number" : "2002",
		"title" : "MATH-2002",
		"credits" : 3.0
	} ],
	"groups" : []
};

var groupU2 = {
	"type" : "Union",
	"plannedCourses" : [ {
		"code" : "ECHO",
		"number" : "1001",
		"title" : "ECHO-1001",
		"credits" : 3.0
	}, {
		"code" : "ECHO",
		"number" : "2002",
		"title" : "ECHO-2002",
		"credits" : 3.0
	} ],
	"groups" : []
};

var groupU3 = {
	"type" : "Union",
	"plannedCourses" : [ {
		"code" : "FOXY",
		"number" : "1001",
		"title" : "FOXY-1001",
		"credits" : 3.0
	}, {
		"code" : "FOXY",
		"number" : "2002",
		"title" : "FOXY-2002",
		"credits" : 3.0
	} ],
	"groups" : []
};

var groupC1 = {
	"type" : "Choice",
	"plannedCourses" : [ {
		"code" : "CHEM",
		"number" : "1001",
		"title" : "CHEM-1001",
		"credits" : 3.0
	}, {
		"code" : "CHEM",
		"number" : "2002",
		"title" : "CHEM-2002",
		"credits" : 3.0
	} ],
	"groups" : []
};

var groupC2 = {
	"type" : "Choice",
	"plannedCourses" : [ {
		"code" : "DERM",
		"number" : "1001",
		"title" : "DERM-1001",
		"credits" : 3.0
	}, {
		"code" : "DERM",
		"number" : "2002",
		"title" : "DERM-2002",
		"credits" : 3.0
	} ],
	"groups" : []
};

var example = [ {
	"id" : "e3b5f01b45ac4fb09d79bab2a521451f",
	"description" : "Spring 2017",
	"termCode" : 201730,
	"termDescription" : "Spring 2017",
	"planGroup" : {},
	"credits" : 14.0
} ];

example[0].planGroup = groupU1;
// example[0].planGroup.groups[0] = groupU2;
// example[0].planGroup.groups[0] = groupU3;
example[0].planGroup.groups[0] = groupC1;
example[0].planGroup.groups[0].groups[0] = groupC2;

//$(document).ready(function() {
//	setTimeout(function() {
//		PL.doPlanImport(example[0]);
//	}, 2000);
//});

var PL = (function() {
	var my = {};
	var planHeader = null;
	var crumbs = [];
	
	// var choices = [];
	// choices[0]=2;
	var defaultHtml = null;

	function dispCoursesClear(id) {
		$(".imp-list-courses").find(".imp-dkill" + id).remove();
	}

	function dispCoursesAdd(id, title) {
		$(".imp-list-courses").append("<div class='imp-list-course imp-dkill" + id + "'>" + title + "</div>");
	}

	my.initPlanImport = function() {
		defaultHtml = $(".planloader").html();
		$(".planloader").remove();
	}

	my.doPlanImport = function(_planHeader,complete) {
		planHeader=_planHeader;
		crumbs=[];
		
		RR.changeSelCourseTabToPopupIfWide('tab_degree');
		
		$("#plan_import_container").html(defaultHtml).show();
		$(".plan-import-options").hide();
		$(".import_plan_button").off().click(function() {
			var courses="";
			$(".imp-list-course").each(function() {
				if (courses.length>0) courses+=",";
				courses+=$(this).text();
			});
			RR.changeSelCourseTab('tab_selected');
			RR.closeSelCourseTabOrPopup('#noticePopup');
			UU.caseAddCourses(courses,function() {
				RR.addGoodWarning("Plan '"+planHeader.description+"' imported.",false,true);
				if (complete) complete();
			},false,true,true,"");
		});
		
		$(".clear_plan_button").off().click(function() {
			clear(planHeader);
		});
		
		$(".cancel_plan_button").off().click(function() {
			console.log("canceling plan");
			RR.renderMyPlanImport(true);
		});
		
		setComplete(processGroup(0, planHeader.planGroup));
	}

	function clear(planHeader) {
		
		function clearGroup(g) {
			g.chosen=null;
			if (g.groups) {
				for (var i=0;i<g.groups.length;i++) {
					var g2=g.groups[i];
					clearGroup(g2);
				}
			}
		}
		clearGroup(planHeader.planGroup);
		crumbs=[];
		$(".imp-choice").not(".imp-template").remove();
		
		setComplete(processGroup(0, planHeader.planGroup));
	}
	
	function processGroup(depth, group) {
		
		if (depth==0) {
			$(".imp-list-courses").empty();
			$(".clear_plan_button").hide();
		}
		
		if ("undefined" === typeof group.chosen) {
			group.chosen = null;
		}
		if (group.chosen == null) {
			group.choiceId = crumbs.length;
			crumbs.push(group);
		}
		if (group.type == "Union" || (group.type=="Choice" && (!group.groups || group.groups.length==0) && group.plannedCourses.length==1)) {
			// Treat a choice with 1 option as a union.
			return processUnionGroup(depth, group);
		} else {
			return processChoiceGroup(depth, group);
		}
	}

	function getTitle(group) {
		var titles = [];
		for (var i = 0; i < group.plannedCourses.length; i++) {
			var c = group.plannedCourses[i];
			titles.push(c.title);
		}
		if (group.groups) {
			for (var i = 0; i < group.groups.length; i++) {
				var g = group.groups[i];
				titles.push(getTitle(g));
			}
		}
		var a = (group.type == "Union") ? " and " : " or ";
		return "(" + titles.join(a) + ")";
	}

	function processUnionGroup(depth, group) {
		group.chosen = 0; // always choose all
		dispCoursesClear(group.choiceId);
		for (var i = 0; i < group.plannedCourses.length; i++) {
			var c = group.plannedCourses[i];
			dispCoursesAdd(group.choiceId, c.title);
		}
		if (group.groups) {
			for (var i = 0; i < group.groups.length; i++) {
				var g = group.groups[i];
				if (!processGroup(depth + 1, g)) {
					return false;
				}
			}
		}
		return true;
	}

	function processChoiceGroup(depth, group) {
		$(".clear_plan_button").show();
		
		if (group.chosen == null) {
			// Not drawn and choice not made.
			drawChoice(group);
			return false;
		}

		// Choice was made.
		var ci = group.chosen;
		dispCoursesClear(group.choiceId);
		$(".imp-dkill" + group.choiceId + " .imp-option").removeClass(
				"imp-chosen");
		$(".imp-dkill" + group.choiceId + " .imp-option:eq(" + ci + ")")
				.addClass("imp-chosen");
		if (ci < group.plannedCourses.length) {
			var c = group.plannedCourses[ci];
			dispCoursesAdd(group.choiceId, c.title);
			return true;
		}
		var chosenGroup = group.groups[ci - group.plannedCourses.length];
		return processGroup(depth + 1, chosenGroup);
	}

	function drawChoice(group) {
		if ($(".imp-dkill" + group.choiceId).length > 0) {
			return; // already drawn
		}
		var choicesText = [];
		for (var i = 0; i < group.plannedCourses.length; i++) {
			var c = group.plannedCourses[i];
			choicesText.push(c.title);
		}
		if (group.groups) {
			for (var j = 0; j < group.groups.length; j++) {
				var grp = group.groups[j];
				var gtitle = getTitle(grp);
				choicesText.push(gtitle);
			}
		}
		var $t1 = $(".imp-choice.imp-template").clone().removeClass("imp-template").addClass("imp-dkill" + group.choiceId);
		var $t2 = $(".imp-option.imp-template").clone().removeClass("imp-template");
		$t1.find(".imp-option-scroll").empty();
		for (var i = 0; i < choicesText.length; i++) {
			$t2.find(".imp-option-num-txt").text((i + 1));
			$t2.find(".imp-option-text").text(choicesText[i]);
			$t1.find(".imp-option-scroll").append($t2);
			$t2.click(makeChoice(group, i));
			$t2 = $(".imp-option.imp-template").clone().removeClass(
					"imp-template");
		}
		$t1.click(makeChoice(group, null));
		var choiceTabs = $(".imp-choice").length - 1;
		var w = $(".imp-chooser").outerWidth() * (1 - 0.16 * choiceTabs);
		$t1.find(".imp-choice-shadow").css("width", w + "px");
		$t1.css("width", "1%");
		$(".imp-chooser").append($t1);
		$t1.animate({
			width : (100 - choiceTabs * 16) + "%"
		}, 300, function() {
			$(this).find(".imp-choice-shadow").css("width", "100%");
		});
	}

	function makeChoice(group, index) {
		return function(event) {
			// debugger;
			group.chosen = index;
			clearChoice(group);
			setComplete(processGroup(0, planHeader.planGroup));
			event.stopPropagation();
		}
	}

	function clearChoice(group) {
		var s = -1;
		for (var i = 0; i < crumbs.length; i++) {
			var g = crumbs[i];
			if (s >= 0) {
				g.chosen = null;
				$(".imp-dkill" + g.choiceId).remove();
			}
			if (g == group) {
				s = i + 1;
				if (g.chosen == null) {
					s = i;
					$(".imp-dkill" + g.choiceId).remove();
				}
			}
		}
		if (s >= 0)
			crumbs.length = s;
	}

	function setComplete(complete) {
		$(".import_plan_button").prop("disabled", !complete);
	}

	return my;
})();
