const AAR = (function() {
	
	var reportCached;
	
	var toggle = function() {
		var trigger = $(this);
		var content = trigger.parent().children('.expandable-content');
		var button = trigger.children('.aar-audit-expand');
		
		button.attr('aria-label', (content.is(':visible')) 
											? button.attr('aria-label').replace('collapse', 'expand')
											: button.attr('aria-label').replace('expand', 'collapse')
										);
		trigger.toggleClass("expanded");
		content.slideToggle("slow");
	};
	
	var my = {};
	
	my.loadData = function() {
		console.log("Loading AAR data from server not cache..");
		$.ajax({
			url: "api/academic-requirements",
			data: {term:BB.activeState.term},
		  	dataType: "xml",
			success: function(data) {
				
				if (!data || data.length == 0) {
					$('#aar-audit-loading').hide();
					$('#aar-audit-empty').show();
					return;
				}
				
				$('#aar-audit-loading').hide();
				$('#aar-audit-content').show();
				
				var sTerms=sisTerms();
	
				var report = $('#aar-audit-content');
				report.append($(data).find("academicAdvisementReport"));
								
				// Report Header
				var title = $('academicAdvisementReport > title');
				if(title.length>0) {
					$('#aarPopup .popup-title').hide();	
				}
				
				report.find('reportDate, manualRefresh')
					.wrapAll('<div class="aar-refresh"/>')
					.find("button").show();
												
				// remove empty requirements
				report.find('requirement:empty').remove();
				
				// add a Expand/Collapse all button
				report.find('requirements')
					.prepend("<div><div class='expandable-all'><span>Expand All</span></div></div>")
					.find('.expandable-all')
					.append('<button class="mdl-button mdl-js-button mdl-button--icon aar-audit-expand"><i class="far fa-angle-down"></i></button>')
					.children('button')
						.attr('aria-label','expand all requirements')
						.parent()
					.click(function(){
						var expandAll = $(this).toggleClass('expanded').hasClass('expanded');
						$(this).children('span').text( expandAll ? 'Collapse All' : 'Expand All');
						$(this).parent().parent('requirements')
							.find('.expandable-header')
								.each(function(){
									var isExpanded = $(this).hasClass('expanded');
									if((expandAll && !isExpanded) || (!expandAll && isExpanded)){
										$(this).click();
									}
								});
					});

				// make requirements expandable
				report.find('requirementGroup, requirement, requirementLine').each(function(){
					
					var container = $(this).children()
								.wrapAll("<div class='expandable-container'/>")
								.parent();
								
					var header = container.children("title,status")
									.wrapAll("<div class='expandable-header'><div/></div>")
									.parent()
									.parent();
					
					var content = container.children()
									.wrapAll("<div class='expandable-content'/>")
									.parent();
									
					if(header.length>0){ 
						
						container.prepend(
							header.append('<button class="mdl-button mdl-js-button mdl-button--icon aar-audit-expand"><i class="far fa-angle-down"></i></button>')
								.children('button')
									.attr('aria-label','expand requirement ' + header.children("title").text())
								.parent()
								.click(toggle)
							);
						content.hide();
					} else {
						container.addClass('no-details');
					}
				});
				
				// add progress charts					
				report.find('requirementProgress').each(function(){
					
					var progress = $(this);
					var header = progress.parent(".expandable-content").parent(".expandable-container").children('.expandable-header');					
					var charts = $('<div class="charts"></div>');
					header.children('button').before(charts);
					var inprogress = false;
					
					// GPA Chart
					var gpa = progress.find('gpa');
					if (gpa.length) {
						gpa = gpa.get(0).attributes;
						var required = parseFloat(gpa.needed.value);
						if(required > 0){
							var actual = parseFloat(gpa.achieved.value);
						
							var position = ((actual / required) / 2) * 100;
							var targetLeft = 50;
							if (position > 100) {
								targetLeft = required / actual * 100;
								position = 100;
							}
							
							var chart = $('#chart-template')
										.clone()
										.removeAttr('id')
										.attr('title', 'GPA Achieved / Target GPA');
							chart.find(".chart-title-text").text('GPA');
							chart.find(".chart-fill")
											.css('width', position + '%')
											.css('background-color', ((actual < required) ? 'red' : '#67C12E'));				
							
							var actualD = actual.toFixed(2);
							var requiredD = required.toFixed(2);
							
							if (actual==0) {
								chart.find('.chart-target-text').text('TBD / ' + requiredD);
							} else {
								chart.find('.chart-target-text').text(actualD + '/' + requiredD);
							}
							
							chart.find('.chart-target').css('left',targetLeft + '%');
							chart.appendTo(charts);		
						}			
					}
					
					// Units Chart
					var units = progress.find('units');
					if (units.length) {
						units = units.get(0).attributes;
						var required = parseFloat(units.needed.value);
						if(required > 0){
							var actual = parseFloat(units.achieved.value);
							var percent = Math.min(actual/required*100, 100);
														
							var chart = $('#chart-template')
										.clone()
										.removeAttr('id')
										.attr('title', 'Units');
							chart.find(".chart-title-text").text('Units');
							chart.find(".chart-fill")
											.css('width', percent + '%')
											.css('background-color', '#328CC1');
							chart.find('.chart-target-tick').hide();
							chart.find('.chart-target-text').text(percent.toFixed(0) + '%');
							chart.appendTo(charts);
							
							inprogress |= (actual > 0);	
						}
					}
						
					// Courses Chart
					var courses = progress.find('courses');
					if (courses.length) {
						courses = courses.get(0).attributes;
						var required = parseFloat(courses.needed.value);
						if(required > 0){
							var actual = parseFloat(courses.achieved.value);
							var percent = Math.min(actual/required*100, 100);
																	
							var chart = $('#chart-template')
										.clone()
										.removeAttr('id')
										.attr('title', 'Courses');
							chart.find(".chart-title-text").text('Courses');
							chart.find(".chart-fill")
											.css('width', percent + '%')
											.css('background-color', '#328CC1');
							chart.find('.chart-target-tick').hide();
							chart.find('.chart-target-text').text(percent.toFixed(0) + '%');
							chart.appendTo(charts);
							
							inprogress |= (actual > 0);
						}
					}
					if(inprogress){	
						var status = header.children("status");
						if (status.text() === 'Not Satisfied') {
							// Change "Not Satisfied" to "In Progress" when appropriate
							status.text("In Progress");
						}	
					}
				});
							
				// Course list headers
				report.find('courseList').each(function(){
					
					var lists = $(this);
					// Course table header					
					lists.find('courses').prepend(`<div class="courses-header">
						<span class="courses-column-title">Course</span>
						<span class="courses-column-title">Description</span>
						<span class="courses-column-title">Units</span>
						<span class="courses-column-title">When Typically<br/>Offered</span>
						<span class="courses-column-title">Grade</span>
						<span class="courses-column-title">Status</span>
						<span class="courses-column-title"></span>
						</div>`);
				});
									
				// Wildcards
				report.find('courseList course[wildcard]').each(function(){
						var wildcard = $(this);
						var details = wildcard.children('subject, catalogNbr, description')
								.wrapAll('<div class="course-details expandable-header"/>')
								.parent()
								.prependTo(wildcard);
								
						details.children('subject, catalogNbr')
								.wrapAll('<div class="course-catalogId"/>')
								.parent()
								.prependTo(details)
								.parent()
								.append('<button class="mdl-button mdl-js-button mdl-button--icon aar-audit-expand"><i class="far fa-angle-down"></i></button>')
								.children('button')
									.attr('aria-label','expand wildcard course list ' + wildcard.find("div.course-details > description").text())
								.parent()
								.click(toggle);
								
						wildcard.children('courses')
								.wrapAll('<div class="expandable-content"/>')
								.parent()
								.hide();
					});
									
				var selection = BB.activeState.cnfs.map(function(cnf){
					return cnf.drop.indexOf("dp_")!=0?cnf.cnKey:null;
				});
				report.find('courseList course[catalogId]').each(function(){
					
					$(this).children('subject, catalogNbr')
							.wrapAll('<div class="course-catalogId"/>')
							.parent()
							.prependTo($(this));
					
					var catalogId = $(this)[0].attributes['catalogId'].value;									
					
					// Load validations
					var vaAttr = $(this)[0].attributes['validationKey'];
					if (vaAttr) {
						var va = vaAttr.value;
						if(va) vaMap[catalogId] = va;
					}
				    

					var disabled = "";
					/*if ( <course is unavailable>) {
						disabled = " disabled ";
					}*/
					
					$(this)
						.append("<button class='mdl-button mdl-js-button mdl-button--raised white-background aar-class-select' onclick='AAR.add(this)' data-course='"+catalogId+"' aria-label='select "+catalogId+"' " + disabled + "> select </button>",
								"<button class='mdl-button mdl-js-button mdl-button--raised aar-class-remove' onclick='AAR.remove(this)' data-course='"+catalogId+"' aria-label='remove "+catalogId+"' " + disabled + "> remove </button>")
						.children('button')
						.wrapAll('<div class="aar-button-panel"/>');
					
					$(this).find('.aar-class-remove').toggle((selection.indexOf(catalogId) >= 0))
					$(this).find('.aar-class-select').toggle((selection.indexOf(catalogId) < 0));
					
					if ($(this).find("availableTerms").length>0) {
					
						// Determine if available in present term
						var inTerm=false;
						var seatsFree=false;
						$(this).find("availableTerms").children().each(function() {
							var psTerm=$(this).attr("code");
							if (sTerms.find(t => t==psTerm)) {
								inTerm=true;
								var full=$(this)[0].getAttribute("termFull")=="true";
								if (!full) {
									seatsFree=true;
								}
							}
						});
						
						var msg="";
						var isGreen=false;
						var notScheduled=false;
						if (!inTerm) {
							msg="Not scheduled this term";
							notScheduled=true;
							$(this).attr("notscheduled","true");
						} else {
							if (!seatsFree) {
								msg="No open seats remain";
							} else {
								isGreen=true;
								msg="Available";
							}
						}
					
						// Display Result
						var tt=$(this).find("termTaken");
						if (tt.length==0) {
							$(this).find("units").after("<termTaken></termTaken>");
							if (notScheduled) {
								$(this).attr("notschedulednottaken","true");
							}
						}
						tt=$(this).find("termTaken");
						tt.append("<div style='color:"+(isGreen?"green":"red")+"'>"+msg+"</div>");
					}
					
				});
									
				$('#aar-audit-loading').hide();
				$('#aar-audit-content').show();				
				reportCached = true;
				
				RR.updateFocus('#aarPopup');
			},
		error: function(data) {
				$('#aar-audit-loading').hide();
				
				if (data.status === 404) {
					$('#aar-audit-empty').show();
				} else {
					$('#aar-audit-error').show();				
				}
					
				console.error("Failed to obtain report data");
			}
		});
	}
	
	var updateButtons = function() {
		var body = $('#aar-audit-popup-root');
		
		var selection = BB.activeState.cnfs.map(function(cnf){
				return cnf.cnKey;
			});
				
		body.find('course').each(function(){
			var sub = $(this).find('subject');
			var num = $(this).find('catalogNbr');
			var course = sub.html().trim() + '-' + num.html().trim();
			
			if (selection.indexOf(course) >= 0) {
				$(this).find('.aar-class-remove').show();
				$(this).find('.aar-class-select').hide();
			} else {
				$(this).find('.aar-class-remove').hide();
				$(this).find('.aar-class-select').show();
				
			}
		});
	}
	
	var findCourse = function(course) {
		for (var i=0;i<BB.activeState.cnfs.length;i++) {
			var cnf=BB.activeState.cnfs[i];
			if (cnf.cnKey === course || (cnf.reqId && cnf.reqId === course)) {
				return cnf;
			}
		}
		return null;
	}
	
	var render = function(html) {
		// Buttons
		var buttons = [
			{
				name: "Print"
			},
			{
				name: "Close",
				action: function() { }
			}
		];
		var options={css:{width:"860px",height:"750px"}};
		
		// Show popup
		RR.popNotice(html, buttons, function() {}, i8n.importAarTitle, false, i8n.aarDisclaimer, options, '#aarPopup');
	}
	
	my.clearReportCache = function(){
		reportCached = false;
	}
	
	my.showPopup = function() {	
		if (reportCached) {
			render();
			updateButtons();
			RR.updateFocus('#aarPopup');
			return;
		}
		
		$.get('audit-aar.jsp', {term:BB.activeState.term}, function(html) {
			render(html);
			my.loadData();
			
		})
		// Log an error if the request fails
		.fail(function(data) {
			console.error("Failed to obtain report content");
		});
	}
	
	my.remove = function(item) {
		var course = item.getAttribute('data-course');
		
		console.log("Removing course '" + course + "'");
		
		var cnf=findCourse(course);
		if (cnf) {
			UU.caseRemoveCourse(cnf.cnfid);
		}

		var cnf2=findCourse(course);
		var removed=cnf2==null||cnf2.drop.indexOf("dp_")==0;

		$(item).siblings('.capp-course-status').remove();
		
		var successDiv = $('<span role="alert" class="capp-course-status"></span>');

		if (removed) {
			$(item).hide();
			$(item).siblings(".aar-class-select").show();
			successDiv.addClass('dw-select-success');
			successDiv.append("Removed " + course);
			
			$('.aar-class-remove').each(function(){
				var btn = $(this);
				
				if (btn.attr('data-course') === course) {
					btn.hide();
					btn.siblings(".aar-class-select").show();
				}
			})
		} else {
			successDiv.addClass('dw-select-error');
			successDiv.append("Failed to remove " + course);
		}
		
		$(item).parents('course').find('.course-msg').append(successDiv);

		setTimeout(function(){
			successDiv.fadeOut(function(){
				successDiv.remove();
			});
		}, 4000);
	}
	
	my.add = function(item, event) {
		$(item).prop('disabled', true);
		//$(item).html('Selecting...');
		var course = item.getAttribute('data-course');
		console.log("Adding course '" + course + "'");

		if (course.indexOf('@') >= 0 && course.split(' ').length == 2) {
			course += " @";
		}
		
		var lengthBefore = BB.activeState.cnfs.length;
		
		var afterAdding = function(wasAdded) {
			var lengthAfter = BB.activeState.cnfs.length;
			var added = lengthAfter > lengthBefore || wasAdded; 
			
			var course = item.getAttribute('data-course');
			
			if (added) {
				$(item).hide();
				
				$(item).siblings(".aar-class-remove").show();
				$(item).prop('disabled', false);
				
				var successDiv = $('<span role="alert" class="capp-course-status"></span>');
				successDiv.addClass('dp-select-success')
				successDiv.append("Selected " + course);
				$(item).parents('course').find('.course-msg').append(successDiv);
				
				setTimeout(function(){
					successDiv.fadeOut(function(){
						successDiv.remove();
					});
				}, 4000);
				
				$('.aar-class-select').each(function(){
					var btn = $(this);
					
					if (btn.attr('data-course') === course) {
						btn.hide();
						btn.siblings(".aar-class-remove").show();
					}
				})
			} else {
				var error = "Could not add course '" + course + "'"; 
				
				$('.warningNoteBad').each(function (){
					var msg = $(this).html(); 
					if (msg.toLowerCase().replace(/-/g, " ").indexOf(course.toLowerCase().replace(/-/g, " ")) > -1) {
						error = msg;
					}
				});
				
				var errorDiv = $('<div role="alert"></div>');
				errorDiv.addClass('dw-select-error')
				errorDiv.append(error);
				$(item).parents('course').find('.course-msg').append(errorDiv);
			}

			$(item).html('Select');			
		}
		
		var cnf=findCourse(course);
		if (cnf && cnf.drop.indexOf("dp_")==0) {
			// Set back to selected
			UU.caseRemoveCourse(cnf.cnfid,true,true);
			afterAdding(true);
		} else {
			UU.caseAddCourses(course,afterAdding,false,false,false,"",null,true);
		}
	}
	
	return my;
}());
Object.freeze(AAR);